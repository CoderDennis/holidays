# Canadian holiday definitions for the Ruby Holiday gem.
# Updated 2014-11-12.
---
months:
  0:
  - name: Good Friday
    regions: [ca]
    function: easter(year)-2
  - name: Easter Sunday
    regions: [ca]
    function: easter(year)
  - name: Easter Monday
    regions: [ca]
    function: easter(year)+1
    type: informal
  1:
  - name: New Year's Day
    regions: [ca]
    mday: 1
  - name: New Year's
    regions: [ca_qc]
    mday: 2
  2:
  - name: Family Day
    regions: [ca_ab, ca_on, ca_sk]
    wday: 1
    week: 3
  - name: Louis Riel Day
    regions: [ca_mb]
    wday: 1
    week: 3
  - name: Nova Scotia Heritage Day # Ideally would be restricted to 2015 or later
    regions: [ca_ns]
    wday: 1
    week: 3
  - name: Islander Day
    regions: [ca_pe]
    wday: 1
    week: 3
  - name: BC Family Day # Ideally would be restricted to 2013 or later
    regions: [ca_bc]
    wday: 1
    week: 2
  3:
  - name: St. Patrick's Day
    regions: [ca_nf]
    mday: 17
  3:
  - name: St. George's Day
    regions: [ca_nf]
    mday: 23
  5:
  - name: Victoria Day
    regions: [ca]
    function: ca_victoria_day(year)
  - name: National Patriotes Day
    regions: [ca_qc]
    function: ca_victoria_day(year)
  6:
  - name: Discovery Day
    regions: [ca_nf]
    mday: 24
  - name: FÃªte Nationale
    regions: [ca_qc]
    mday: 24
  - name: National Aboriginal Day
    regions: [ca_nt]
    mday: 21
  7:
  - name: Canada Day
    regions: [ca]
    mday: 1
    observed: to_monday_if_sunday
  - name: Orangemen's Day
    regions: [ca_nf]
    mday: 12
  - name: Nunavut Day
    regions: [ca_nu]
    mday: 9
  8:
  - name: BC Day
    week: 1
    regions: [ca_bc]
    wday: 1
  - name: Saskatchewan Day
    week: 1
    regions: [ca_sk]
    wday: 1
  - name: Heritage Day
    week: 1
    regions: [ca_ab]
    wday: 1
  - name: Natal Day
    week: 1
    regions: [ca_ns]
    wday: 1
  - name: Civic Holiday
    week: 1
    regions: [ca_on, ca_nt, ca_nu, ca_pe] # Appears to be a holiday in Ontario by convention
    wday: 1
  - name: New Brunswick Day
    week: 1
    regions: [ca_nb]
    wday: 1
  - name: Discovery Day
    week: 3
    regions: [ca_yk]
    wday: 1
  9:
  - name: Labour Day
    week: 1
    regions: [ca]
    wday: 1
  10:
  - name: Thanksgiving
    week: 2
    regions: [ca]
    wday: 1
  11:
  - name: Remembrance Day
    regions: [ca]
    mday: 11
  12:
  - name: Christmas Day
    regions: [ca]
    mday: 25
  - name: Boxing Day
    regions: [ca]
    mday: 26
methods:
  ca_victoria_day: |
    # Monday on or before May 24
    def self.ca_victoria_day(year)
      date = Date.civil(year,5,24)
      if date.wday > 1
        date -= (date.wday - 1)
      elsif date.wday == 0
        date -= 6
      end
      date
    end
tests: |
    {Date.civil(2008,1,1) => 'New Year\'s Day',
     Date.civil(2008,3,21) => 'Good Friday',
     Date.civil(2013,3,31) => 'Easter Sunday',
     Date.civil(2008,3,24) => 'Easter Monday',
     Date.civil(2008,5,19) => 'Victoria Day',
     Date.civil(2008,7,1) => 'Canada Day',
     Date.civil(2008,9,1) => 'Labour Day',
     Date.civil(2008,10,13) => 'Thanksgiving',
     Date.civil(2008,11,11) => 'Remembrance Day',
     Date.civil(2008,12,25) => 'Christmas Day',
     Date.civil(2008,12,26) => 'Boxing Day'}.each do |date, name|
      assert_equal name, (Holidays.on(date, :ca, :informal)[0] || {})[:name]
    end

    # Family Day in BC
    [ Date.civil(2013,2,11), Date.civil(2014,2,10) ].each do |date|
      assert_equal 'BC Family Day', Holidays.on(date, :ca_bc)[0][:name]
    end

    # Nova Scotia Heritage Day
    [ Date.civil(2015,2,16), Date.civil(2016,2,15) ].each do |date|
      assert_equal 'Nova Scotia Heritage Day', Holidays.on(date, :ca_ns)[0][:name]
    end

    # Islander Day in PE
    [ Date.civil(2013,2,18), Date.civil(2014,2,17) ].each do |date|
      assert_equal 'Islander Day', Holidays.on(date, :ca_pe)[0][:name]
    end

    # Victoria Day
    [Date.civil(2004,5,24), Date.civil(2005,5,23), Date.civil(2006,5,22),
     Date.civil(2007,5,21), Date.civil(2008,5,19)].each do |date|
      assert_equal 'Victoria Day', Holidays.on(date, :ca)[0][:name]
    end

    # First Monday in August
    [Date.civil(2013,8,5), Date.civil(2014,8,4), Date.civil(2015,8,3)].each do |date|
      { :ca_bc => 'BC Day',
        :ca_sk => 'Saskatchewan Day',
        :ca_ab => 'Heritage Day',
        :ca_ns => 'Natal Day',
        :ca_on => 'Civic Holiday',
        :ca_nt => 'Civic Holiday',
        :ca_nu => 'Civic Holiday',
        :ca_pe => 'Civic Holiday',
        :ca_nb => 'New Brunswick Day' }.each do |region, name|
        assert_equal name, Holidays.on(date, region)[0][:name]
      end
    end
